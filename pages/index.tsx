import Head from 'next/head'
import { PlayIcon, PauseIcon, FastForwardIcon, RewindIcon } from '@heroicons/react/outline'
import { useState, useMemo, useRef, useEffect } from 'react'
import ReactAudioPlayer from 'react-audio-player'
import { shuffle } from 'lodash'

import { useSongs } from '/lib/queries/useSongs'

export default function Home() {
  const { data: songs = [] } = useSongs()

  const shuffledSongs = useMemo(() => {
    return shuffle(songs)
  }, [songs])

  const [currentSongIndex, setCurrentSongIndex] = useState(0)
  const [isPlaying, setIsPlaying] = useState(false)

  const playerRef = useRef<ReactAudioPlayer>()
  const audioElement = playerRef.current?.audioEl.current

  const songURI = useMemo(() => {
    const { music_uri } = shuffledSongs?.[currentSongIndex] || {}
    return music_uri
  }, [shuffledSongs, currentSongIndex])

  useEffect(() => {
    if (isPlaying) {
      audioElement?.play()
    }
  }, [songURI])

  const playNextSong = () => {
    setCurrentSongIndex(currentSongIndex =>
      currentSongIndex < songs.length
        ? currentSongIndex + 1
        : 0
    )
  }

  const playPreviousSong = () => {
    setCurrentSongIndex(currentSongIndex =>
      currentSongIndex > 0
        ? currentSongIndex - 1
        : songs.length - 1
    )
  }


  return (
    <div>
      <Head>
        <title>Animal Crossing Radio</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className='min-h-screen flex flex-col items-center justify-center'>
        <h1 className='text-lg font-bold select-none'>
          animal crossing radio
        </h1>
        <ReactAudioPlayer
          ref={playerRef}
          src={songURI}
          controls={false}
          onEnded={playNextSong}
          onPlay={() => setIsPlaying(true)}
          onPause={() => setIsPlaying(false)}
        />
        <div className='flex items-center justify-center'>
          <RewindIcon role='button' className='h-8 w-8 hover:text-green-800' onClick={playPreviousSong} />
          {isPlaying
            ? <PauseIcon role='button' className='h-8 w-8 hover:text-green-800' onClick={() => audioElement.pause()} />
            : <PlayIcon role='button' className='h-8 w-8 g hover:text-green-800' onClick={() => audioElement.play()} />
          }
          <FastForwardIcon role='button' className='h-8 w-8 hover:text-green-800' onClick={playNextSong} />
        </div>
      </main>
    </div>
  )
}
